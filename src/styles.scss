:root {
	--foreground: #{$green-dark};
	--background: #{$white};
	--foreground-inverse: #{$green-light};
	--background-inverse: #{$green-dark};

	font-family: $text;
	color: var(--foreground);
	background-color: var(--background);
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html {
	scroll-behavior: smooth;
	
	&:has(.dark) {
    --foreground: #{$green-light};
    --background: #{$green-dark};
    --foreground-inverse: #{$green-dark};
    --background-inverse: #{$green-light};
	}

	&:has(.light) {
    --background: #{$green-light};
	}
}

body {
	font-size: $base;
	letter-spacing: -0.015em;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  @media (max-width: $mobile) {
    font-size: $mobile_base;
    // line-height: $mobile_scale;
  }
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
	font-family: $display;
	font-weight: 350;
	white-space: pre-line;
}

h1,
.h1 {
	font-size: $base * $scale * 4;

	@media (max-width: $mobile) {
		font-size: $mobile_base * $mobile_scale * 2;
	}

	&.h1--huge {
		font-size: $base * $scale * 7;

		@media (max-width: $mobile) {
			font-size: $mobile_base * $mobile_scale * 3.5;
		}
	}
}

h2,
.h2 {
	font-size: $base * $scale * 3;

	@media (max-width: $mobile) {
		font-size: $mobile_base * $mobile_scale * 2;
	}
}

h3,
.h3 {
	font-size: $base * $scale * 2;

	@media (max-width: $mobile) {
		font-size: $mobile_base * $mobile_scale * 1.2;
	}
}

h4,
.h4 {
	font-size: $base * $scale * 1.5;

	@media (max-width: $mobile) {
		font-size: $mobile_base * $mobile_scale;
	}
}

h5,
.h5 {
	font-size: $base * $scale;
	font-weight: 600;

	@media (max-width: $mobile) {
		font-size: $mobile_base;
	}
}

h6,
.h6 {
	font-size: $base * $scale * 0.666;
	font-weight: 600;
	text-transform: uppercase;

	@media (max-width: $mobile) {
		font-size: $mobile_base * $mobile_scale * 0.75;
	}
}

p {
	line-height: $scale;
	white-space: pre-line;

	@media (max-width: $mobile) {
		line-height: $mobile_scale;
	}
}

hr {
	border: none;
	border-top: 1px solid;
}

a {
	color: inherit;
	text-decoration: none;
}

a:hover {
	// color: $yellow-dark;
	text-decoration: underline;
}

input,
button {
	font-size: inherit;
	font-family: inherit;
	color: currentColor;
}

button:focus:not(:focus-visible) {
	outline: none;
}

button,
.button {
	cursor: pointer;
	display: inline-block;
	text-align: center;
	padding: ($base * $scale * 0.333) ($base * $scale * 0.666);
	border-radius: ($base * $scale);
	background: transparent;
	border: 1px solid;
	line-height: 1;

	&:hover,
	&:focus,
	&.active {
		text-decoration: none;
		color: $green-darker;
		background-color: $yellow-dark;
	}
}

table {
	width: 100%;
	-webkit-border-horizontal-spacing: 0;
	-webkit-border-vertical-spacing: 0;

	td,
	th {
		border-top: 1px solid;
		padding: ($base * 0.5) ($base * 0.75);
		white-space: pre-line;
		width: calc(100% / var(--length));
	}

	th {
		text-align: center;
		text-transform: uppercase;

		border-top: none;
	}

	tr {
		&:last-child {
			td,
			th {
				border-bottom: 1px solid;
			}
		}
	}

	td {
		vertical-align: top;
		
		&:not(:first-child) {
			border-left: 1px solid;
			position: relative;

			&:after {
				content: "";
				height: $base * 0.33;
				width: 2px;
				position: absolute;
				top: 0;
				left: -1px;
				background-color: var(--background);
			}

			.Light &:after {
				background-color: $green-light;
			}
		}
	}

	+ table,
	&:first-child {
		margin-top: $base * -1;
	}

	.-contact & {
		td,
		th {
			padding: 0;
			border: none;
		}

		tr:last-child td {
			border: none;
		}
	}
}

svg {
	path {
		fill: currentColor;
	}

	line {
		stroke: currentColor;
	} 
}

details {
	
	summary {
		cursor: pointer;

		&::-webkit-details-marker {
			display: none;
			content: "";
		}

		&::marker {
			display: none;
			content: "";
		}
	}
}

.ta-center {
	text-align: center;
}

.visually-hidden {
	border: 0;
	clip: rect(0 0 0 0);
	height: auto;
	margin: 0;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
	white-space: nowrap;
}

[id] {
	scroll-margin-top: $base * 5;
}